-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Nota`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Nota` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Nota` (
  `idNota` INT NOT NULL AUTO_INCREMENT,
  `Tema` VARCHAR(30) NOT NULL,
  `Descripcion` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idNota`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idNota_UNIQUE` ON `mydb`.`Nota` (`idNota` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Articulo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Articulo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Articulo` (
  `idArticulo` INT NOT NULL AUTO_INCREMENT,
  `ISSN` VARCHAR(45) NULL,
  `Titulo` VARCHAR(45) NOT NULL,
  `Autor` VARCHAR(45) NOT NULL,
  `Nom_revista` VARCHAR(45) NOT NULL,
  `Pag_inicio` INT NULL,
  `Pag_fin` INT NULL,
  `Mes` INT NULL,
  `Anio` INT NULL,
  PRIMARY KEY (`idArticulo`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idArticulo_UNIQUE` ON `mydb`.`Articulo` (`idArticulo` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Libro`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Libro` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Libro` (
  `idLibro` INT NOT NULL AUTO_INCREMENT,
  `ISBN` VARCHAR(45) NULL,
  `Titulo` VARCHAR(45) NOT NULL,
  `Autor` VARCHAR(45) NOT NULL,
  `Editorial` VARCHAR(45) NULL,
  `Numero_pags` INT NULL,
  `Anio` INT NULL,
  PRIMARY KEY (`idLibro`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idLibro_UNIQUE` ON `mydb`.`Libro` (`idLibro` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Libro_tiene_Notas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Libro_tiene_Notas` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Libro_tiene_Notas` (
  `idLibro` INT NOT NULL,
  `idNota` INT NOT NULL,
  PRIMARY KEY (`idNota`),
  CONSTRAINT `idNota`
    FOREIGN KEY (`idNota`)
    REFERENCES `mydb`.`Nota` (`idNota`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idLibro`
    FOREIGN KEY (`idLibro`)
    REFERENCES `mydb`.`Libro` (`idLibro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idNota_idx` ON `mydb`.`Libro_tiene_Notas` (`idNota` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Articulo_tiene_Notas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Articulo_tiene_Notas` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Articulo_tiene_Notas` (
  `idArticulo` INT NOT NULL,
  `idNota` INT NOT NULL,
  PRIMARY KEY (`idNota`),
  CONSTRAINT `fk_idArticulo`
    FOREIGN KEY (`idArticulo`)
    REFERENCES `mydb`.`Articulo` (`idArticulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_idNota`
    FOREIGN KEY (`idNota`)
    REFERENCES `mydb`.`Nota` (`idNota`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idArticulo_idx` ON `mydb`.`Articulo_tiene_Notas` (`idArticulo` ASC) VISIBLE;

CREATE INDEX `idNota_idx` ON `mydb`.`Articulo_tiene_Notas` (`idNota` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
