/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ConexionBD;
import java.awt.print.Book;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utilidades.Utilidades;
/**
 *
 * @author Natalia
 */
public class Biblioteca extends javax.swing.JFrame {

    /**
     * Creamos las conexiones a la base de datos
     */
    ConexionBD c = new ConexionBD();
    Connection con = c.getConexion();
    String attribute;
    
    /**
     * Crea el constructor de biblioteca
     */
    
    public Biblioteca() {
        initComponents();
        setVisible(true);
        createButtonGroupBuscar();
        createButtonGroupAddNota();
        createButtonGroupModify();
        addItemsToArticleComboBox();
        addItemsToBookComboBox();
        addItemsToNotaComboBox();
        setResizable(false);
        setLocationRelativeTo(null);

    }
    
    /**
     * Crea el constructor de biblioteca con parametro para hacer el login
     * @param login 
     */
    
     public Biblioteca(int login) {
        initComponents();
        setVisible(true);
        createButtonGroupBuscar();
        createButtonGroupAddNota();
        createButtonGroupModify();
        addItemsToArticleComboBox();
        addItemsToBookComboBox();
        addItemsToNotaComboBox();
        setResizable(false);
        login = 1;
        setLocationRelativeTo(null);

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchBtnGroup = new javax.swing.ButtonGroup();
        addNotaBtnGroup = new javax.swing.ButtonGroup();
        chooseTmaNotaBtnGroup = new javax.swing.ButtonGroup();
        modifyBtnGroup = new javax.swing.ButtonGroup();
        PanelGeneral = new javax.swing.JTabbedPane();
        RegistroDeTodo = new javax.swing.JPanel();
        PanelRegistroArticulo = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ISSNArticuloRegistroTxtField = new javax.swing.JTextField();
        TituloArticuloRegistroTxtField = new javax.swing.JTextField();
        AutorArticuloRegistroTxtField = new javax.swing.JTextField();
        RevistaArticuloRegistroTxtField = new javax.swing.JTextField();
        PInicioArticuloRegistroTxtField = new javax.swing.JTextField();
        PFinArticuloRegistroTxtField = new javax.swing.JTextField();
        MesArticuloRegistroTxtField = new javax.swing.JTextField();
        YearArticuloRegistroTxtField = new javax.swing.JTextField();
        SaveArticuloRegistroBtn = new javax.swing.JButton();
        PanelRegistroLibro = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        ISBNLibroRegistroTxtField = new javax.swing.JTextField();
        TituloLibroRegistroTxtField = new javax.swing.JTextField();
        AutorLibroRegistroTxtField = new javax.swing.JTextField();
        EditorialLibroRegistroTxtField = new javax.swing.JTextField();
        PgNumLibroRegistroTxtField = new javax.swing.JTextField();
        YearLibroRegistroTxtField = new javax.swing.JTextField();
        SaveLibroRegistroBtn = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        PanelBusqueda = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        searchBookComboBox = new javax.swing.JComboBox<>();
        libroSearchRadioBtn = new javax.swing.JRadioButton();
        ArticuloSearchRadioBtn = new javax.swing.JRadioButton();
        NotaSearchRadioBtn = new javax.swing.JRadioButton();
        searchComboTxtField = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        exportarLibrosBtn = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        searchBookBtn = new javax.swing.JButton();
        searchArticleComboBox = new javax.swing.JComboBox<>();
        searchArticleBtn = new javax.swing.JButton();
        searchNotasBtn = new javax.swing.JButton();
        searchAllBookBtn = new javax.swing.JButton();
        searchAllArticleBtn = new javax.swing.JButton();
        searchAllNotasBtn = new javax.swing.JButton();
        allAtributeNotaComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        PanelModificar = new javax.swing.JPanel();
        PanelRegistroArticulo1 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        articISSNModifyTxtField = new javax.swing.JTextField();
        articTituloModifyTxtField = new javax.swing.JTextField();
        articAutorModifyTxtField = new javax.swing.JTextField();
        articRevistaModifyTxtField = new javax.swing.JTextField();
        articPiniModifyTxtField = new javax.swing.JTextField();
        articPFinModifyTxtField = new javax.swing.JTextField();
        articMesModifyTxtField = new javax.swing.JTextField();
        articAnioModifyTxtField = new javax.swing.JTextField();
        articSaveModifyBtn = new javax.swing.JButton();
        articModificarModifyBtn = new javax.swing.JButton();
        articDeleteModifyBtn = new javax.swing.JButton();
        articleModifyRadioBtn = new javax.swing.JRadioButton();
        PanelRegistroLibro2 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        bookISBNModifyTxtField = new javax.swing.JTextField();
        bookTituloModifyTxtField = new javax.swing.JTextField();
        bookAutorModifyTxtField = new javax.swing.JTextField();
        bookEditorialModifyTxtField = new javax.swing.JTextField();
        bookNpagslModifyTxtField = new javax.swing.JTextField();
        bookAnioModifyTxtField = new javax.swing.JTextField();
        bookSaveModifyBtn = new javax.swing.JButton();
        bookModificarModifyBtn = new javax.swing.JButton();
        bookDeleteModifyBtn = new javax.swing.JButton();
        bookModifyRadioBtn = new javax.swing.JRadioButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        modifyTable = new javax.swing.JTable();
        PanelNotas = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        bookAddNotaRadioBtn = new javax.swing.JRadioButton();
        articleAddNotaRadioBtn = new javax.swing.JRadioButton();
        bookOrArtSearchBtn = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        showLibArtEnNotasTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        noteAsociarTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        addNoteTxtField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        addNoteTxtArea = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        noteAddTable = new javax.swing.JTable();
        modifyNoteBtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        saveNoteBtn = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 204));

        RegistroDeTodo.setBackground(new java.awt.Color(204, 204, 255));

        PanelRegistroArticulo.setBackground(new java.awt.Color(153, 153, 255));
        PanelRegistroArticulo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Registre su art√≠culo");

        jLabel3.setText("ISSN");

        jLabel4.setText("T√≠tulo*");

        jLabel5.setText("Autor*");

        jLabel6.setText("Revista*");

        jLabel7.setText("P√°gina de inicio");

        jLabel8.setText("P√°gina de fin");

        jLabel9.setText("Mes");

        jLabel10.setText("A√±o");

        ISSNArticuloRegistroTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISSNArticuloRegistroTxtFieldActionPerformed(evt);
            }
        });

        TituloArticuloRegistroTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TituloArticuloRegistroTxtFieldActionPerformed(evt);
            }
        });

        AutorArticuloRegistroTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutorArticuloRegistroTxtFieldActionPerformed(evt);
            }
        });

        PFinArticuloRegistroTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PFinArticuloRegistroTxtFieldActionPerformed(evt);
            }
        });

        SaveArticuloRegistroBtn.setText("Guardar");
        SaveArticuloRegistroBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveArticuloRegistroBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelRegistroArticuloLayout = new javax.swing.GroupLayout(PanelRegistroArticulo);
        PanelRegistroArticulo.setLayout(PanelRegistroArticuloLayout);
        PanelRegistroArticuloLayout.setHorizontalGroup(
            PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistroArticuloLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelRegistroArticuloLayout.createSequentialGroup()
                        .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelRegistroArticuloLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(PanelRegistroArticuloLayout.createSequentialGroup()
                                .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelRegistroArticuloLayout.createSequentialGroup()
                                        .addComponent(ISSNArticuloRegistroTxtField)
                                        .addGap(79, 79, 79))
                                    .addGroup(PanelRegistroArticuloLayout.createSequentialGroup()
                                        .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(AutorArticuloRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TituloArticuloRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)))
                                .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(18, 18, 18)
                        .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MesArticuloRegistroTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                            .addComponent(YearArticuloRegistroTxtField))
                        .addGap(26, 26, 26))
                    .addGroup(PanelRegistroArticuloLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RevistaArticuloRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PanelRegistroArticuloLayout.createSequentialGroup()
                        .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PFinArticuloRegistroTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                            .addComponent(PInicioArticuloRegistroTxtField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SaveArticuloRegistroBtn)
                        .addGap(18, 18, 18))))
        );
        PanelRegistroArticuloLayout.setVerticalGroup(
            PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistroArticuloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ISSNArticuloRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(MesArticuloRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(TituloArticuloRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(YearArticuloRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(AutorArticuloRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(RevistaArticuloRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PInicioArticuloRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelRegistroArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PFinArticuloRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(SaveArticuloRegistroBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelRegistroLibro.setBackground(new java.awt.Color(153, 153, 255));
        PanelRegistroLibro.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Registre su libro");

        jLabel12.setText("ISBN");

        jLabel13.setText("T√≠tulo*");

        jLabel14.setText("Autor*");

        jLabel15.setText("Editorial");

        jLabel16.setText("N√∫mero de p√°ginas");

        jLabel17.setText("A√±o");

        ISBNLibroRegistroTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISBNLibroRegistroTxtFieldActionPerformed(evt);
            }
        });

        TituloLibroRegistroTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TituloLibroRegistroTxtFieldActionPerformed(evt);
            }
        });

        AutorLibroRegistroTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutorLibroRegistroTxtFieldActionPerformed(evt);
            }
        });

        YearLibroRegistroTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearLibroRegistroTxtFieldActionPerformed(evt);
            }
        });

        SaveLibroRegistroBtn.setText("Guardar");
        SaveLibroRegistroBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveLibroRegistroBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelRegistroLibroLayout = new javax.swing.GroupLayout(PanelRegistroLibro);
        PanelRegistroLibro.setLayout(PanelRegistroLibroLayout);
        PanelRegistroLibroLayout.setHorizontalGroup(
            PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistroLibroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelRegistroLibroLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 197, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelRegistroLibroLayout.createSequentialGroup()
                        .addGroup(PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelRegistroLibroLayout.createSequentialGroup()
                                .addComponent(ISBNLibroRegistroTxtField)
                                .addGap(185, 185, 185))
                            .addGroup(PanelRegistroLibroLayout.createSequentialGroup()
                                .addGroup(PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(AutorLibroRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TituloLibroRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(164, Short.MAX_VALUE))))
                    .addGroup(PanelRegistroLibroLayout.createSequentialGroup()
                        .addGroup(PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelRegistroLibroLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(EditorialLibroRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelRegistroLibroLayout.createSequentialGroup()
                                .addGroup(PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PgNumLibroRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(168, Short.MAX_VALUE))
                    .addGroup(PanelRegistroLibroLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(YearLibroRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SaveLibroRegistroBtn)
                        .addGap(18, 18, 18))))
        );
        PanelRegistroLibroLayout.setVerticalGroup(
            PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistroLibroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(ISBNLibroRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(TituloLibroRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(AutorLibroRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(EditorialLibroRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PgNumLibroRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelRegistroLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YearLibroRegistroTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(SaveLibroRegistroBtn))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jLabel27.setText("* campos obligatorios");

        javax.swing.GroupLayout RegistroDeTodoLayout = new javax.swing.GroupLayout(RegistroDeTodo);
        RegistroDeTodo.setLayout(RegistroDeTodoLayout);
        RegistroDeTodoLayout.setHorizontalGroup(
            RegistroDeTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegistroDeTodoLayout.createSequentialGroup()
                .addGroup(RegistroDeTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(RegistroDeTodoLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel27))
                    .addGroup(RegistroDeTodoLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(PanelRegistroArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                        .addComponent(PanelRegistroLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        RegistroDeTodoLayout.setVerticalGroup(
            RegistroDeTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegistroDeTodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RegistroDeTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(PanelRegistroLibro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelRegistroArticulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jLabel27)
                .addContainerGap())
        );

        PanelGeneral.addTab("Registro", RegistroDeTodo);

        PanelBusqueda.setBackground(new java.awt.Color(204, 255, 204));

        jPanel2.setBackground(new java.awt.Color(0, 204, 102));

        searchBookComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBookComboBoxActionPerformed(evt);
            }
        });

        libroSearchRadioBtn.setSelected(true);
        libroSearchRadioBtn.setText("Libros");
        libroSearchRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libroSearchRadioBtnActionPerformed(evt);
            }
        });

        ArticuloSearchRadioBtn.setText("Art√≠culos");
        ArticuloSearchRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArticuloSearchRadioBtnActionPerformed(evt);
            }
        });

        NotaSearchRadioBtn.setText("Notas");
        NotaSearchRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotaSearchRadioBtnActionPerformed(evt);
            }
        });

        searchComboTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchComboTxtFieldActionPerformed(evt);
            }
        });

        jLabel24.setText("Elija su criterio de b√∫squeda");

        exportarLibrosBtn.setText("Exportar");
        exportarLibrosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportarLibrosBtnActionPerformed(evt);
            }
        });

        jLabel26.setText("¬øDesea exportar los datos?");

        searchBookBtn.setText("Buscar");
        searchBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBookBtnActionPerformed(evt);
            }
        });

        searchArticleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchArticleComboBoxActionPerformed(evt);
            }
        });

        searchArticleBtn.setText("Buscar");
        searchArticleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchArticleBtnActionPerformed(evt);
            }
        });

        searchNotasBtn.setText("Buscar");
        searchNotasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchNotasBtnActionPerformed(evt);
            }
        });

        searchAllBookBtn.setText("Buscar");
        searchAllBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAllBookBtnActionPerformed(evt);
            }
        });

        searchAllArticleBtn.setText("Buscar");
        searchAllArticleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAllArticleBtnActionPerformed(evt);
            }
        });

        searchAllNotasBtn.setText("Buscar");
        searchAllNotasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAllNotasBtnActionPerformed(evt);
            }
        });

        allAtributeNotaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allAtributeNotaComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(searchBookComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchComboTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(18, 18, 18)
                        .addComponent(exportarLibrosBtn))
                    .addComponent(jLabel24)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(searchArticleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(allAtributeNotaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(88, 88, 88)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchBookBtn)
                            .addComponent(searchArticleBtn)
                            .addComponent(searchNotasBtn)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(libroSearchRadioBtn)
                            .addComponent(searchAllBookBtn))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ArticuloSearchRadioBtn)
                            .addComponent(searchAllArticleBtn))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(NotaSearchRadioBtn))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(searchAllNotasBtn)))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(libroSearchRadioBtn)
                    .addComponent(ArticuloSearchRadioBtn)
                    .addComponent(NotaSearchRadioBtn))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchAllBookBtn)
                    .addComponent(searchAllArticleBtn)
                    .addComponent(searchAllNotasBtn))
                .addGap(24, 24, 24)
                .addComponent(jLabel24)
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBookComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchComboTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(searchNotasBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchArticleBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBookBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(searchArticleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(allAtributeNotaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportarLibrosBtn)
                    .addComponent(jLabel26))
                .addGap(25, 25, 25))
        );

        searchTable.setBackground(new java.awt.Color(153, 255, 153));
        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(searchTable);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel22.setText("¬øQu√© desea buscar?");

        javax.swing.GroupLayout PanelBusquedaLayout = new javax.swing.GroupLayout(PanelBusqueda);
        PanelBusqueda.setLayout(PanelBusquedaLayout);
        PanelBusquedaLayout.setHorizontalGroup(
            PanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(16, 16, 16))
            .addGroup(PanelBusquedaLayout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(jLabel22)
                .addContainerGap(420, Short.MAX_VALUE))
        );
        PanelBusquedaLayout.setVerticalGroup(
            PanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBusquedaLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(PanelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        PanelGeneral.addTab("B√∫squeda", PanelBusqueda);

        PanelModificar.setBackground(new java.awt.Color(204, 153, 255));

        PanelRegistroArticulo1.setBackground(new java.awt.Color(204, 204, 255));
        PanelRegistroArticulo1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel29.setText("ISSN");

        jLabel30.setText("T√≠tulo");

        jLabel31.setText("Autor");

        jLabel32.setText("Revista");

        jLabel33.setText("P√°gina de inicio");

        jLabel34.setText("P√°gina de fin");

        jLabel35.setText("Mes");

        jLabel36.setText("A√±o");

        articSaveModifyBtn.setText("Guardar");
        articSaveModifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                articSaveModifyBtnActionPerformed(evt);
            }
        });

        articModificarModifyBtn.setText("Modificar");
        articModificarModifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                articModificarModifyBtnActionPerformed(evt);
            }
        });

        articDeleteModifyBtn.setText("Eliminar");
        articDeleteModifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                articDeleteModifyBtnActionPerformed(evt);
            }
        });

        articleModifyRadioBtn.setSelected(true);
        articleModifyRadioBtn.setText("Art√≠culo");
        articleModifyRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                articleModifyRadioBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelRegistroArticulo1Layout = new javax.swing.GroupLayout(PanelRegistroArticulo1);
        PanelRegistroArticulo1.setLayout(PanelRegistroArticulo1Layout);
        PanelRegistroArticulo1Layout.setHorizontalGroup(
            PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(articleModifyRadioBtn)
                    .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(18, 18, 18)
                        .addComponent(articAutorModifyTxtField))
                    .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(articRevistaModifyTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))
                    .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(18, 18, 18)
                        .addComponent(articISSNModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addGap(18, 18, 18)
                        .addComponent(articTituloModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52)
                .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                        .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel34))
                        .addGap(18, 18, 18)
                        .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(articPiniModifyTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                            .addComponent(articPFinModifyTxtField))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                        .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                                .addComponent(jLabel36)
                                .addGap(18, 18, 18)
                                .addComponent(articAnioModifyTxtField))
                            .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                                .addComponent(jLabel35)
                                .addGap(18, 18, 18)
                                .addComponent(articMesModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(articDeleteModifyBtn)
                            .addComponent(articSaveModifyBtn)
                            .addComponent(articModificarModifyBtn))
                        .addGap(17, 17, 17))))
        );
        PanelRegistroArticulo1Layout.setVerticalGroup(
            PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(articleModifyRadioBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(articISSNModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(articPiniModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(articPFinModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(articTituloModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelRegistroArticulo1Layout.createSequentialGroup()
                        .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(jLabel35)
                            .addComponent(articAutorModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(articMesModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelRegistroArticulo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(jLabel36)
                            .addComponent(articRevistaModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(articAnioModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelRegistroArticulo1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(articDeleteModifyBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(articModificarModifyBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(articSaveModifyBtn)))
                .addContainerGap())
        );

        PanelRegistroLibro2.setBackground(new java.awt.Color(153, 153, 255));
        PanelRegistroLibro2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel45.setText("ISBN");

        jLabel46.setText("T√≠tulo");

        jLabel47.setText("Autor");

        jLabel48.setText("Editorial");

        jLabel49.setText("N√∫mero de p√°ginas");

        jLabel50.setText("A√±o");

        bookISBNModifyTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookISBNModifyTxtFieldActionPerformed(evt);
            }
        });

        bookTituloModifyTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookTituloModifyTxtFieldActionPerformed(evt);
            }
        });

        bookAutorModifyTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookAutorModifyTxtFieldActionPerformed(evt);
            }
        });

        bookAnioModifyTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookAnioModifyTxtFieldActionPerformed(evt);
            }
        });

        bookSaveModifyBtn.setText("Guardar");
        bookSaveModifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookSaveModifyBtnActionPerformed(evt);
            }
        });

        bookModificarModifyBtn.setText("Modificar");
        bookModificarModifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookModificarModifyBtnActionPerformed(evt);
            }
        });

        bookDeleteModifyBtn.setText("Eliminar");
        bookDeleteModifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookDeleteModifyBtnActionPerformed(evt);
            }
        });

        bookModifyRadioBtn.setText("Libro");
        bookModifyRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookModifyRadioBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelRegistroLibro2Layout = new javax.swing.GroupLayout(PanelRegistroLibro2);
        PanelRegistroLibro2.setLayout(PanelRegistroLibro2Layout);
        PanelRegistroLibro2Layout.setHorizontalGroup(
            PanelRegistroLibro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistroLibro2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelRegistroLibro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelRegistroLibro2Layout.createSequentialGroup()
                        .addGroup(PanelRegistroLibro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel45)
                            .addComponent(jLabel46))
                        .addGap(18, 18, 18)
                        .addGroup(PanelRegistroLibro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bookAutorModifyTxtField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(bookTituloModifyTxtField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bookISBNModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel47)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelRegistroLibro2Layout.createSequentialGroup()
                        .addComponent(bookDeleteModifyBtn)
                        .addGap(16, 16, 16))
                    .addGroup(PanelRegistroLibro2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(bookModifyRadioBtn)))
                .addGroup(PanelRegistroLibro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelRegistroLibro2Layout.createSequentialGroup()
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bookAnioModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelRegistroLibro2Layout.createSequentialGroup()
                        .addGroup(PanelRegistroLibro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelRegistroLibro2Layout.createSequentialGroup()
                                .addComponent(jLabel49)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bookNpagslModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelRegistroLibro2Layout.createSequentialGroup()
                                .addComponent(bookModificarModifyBtn)
                                .addGap(18, 18, 18)
                                .addComponent(bookSaveModifyBtn))
                            .addGroup(PanelRegistroLibro2Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel48)
                                .addGap(18, 18, 18)
                                .addComponent(bookEditorialModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(23, Short.MAX_VALUE))))
        );
        PanelRegistroLibro2Layout.setVerticalGroup(
            PanelRegistroLibro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistroLibro2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bookModifyRadioBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelRegistroLibro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(bookISBNModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48)
                    .addComponent(bookEditorialModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(PanelRegistroLibro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(bookTituloModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookNpagslModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(PanelRegistroLibro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(bookAutorModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50)
                    .addComponent(bookAnioModifyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelRegistroLibro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookSaveModifyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookModificarModifyBtn)
                    .addComponent(bookDeleteModifyBtn))
                .addGap(94, 94, 94))
        );

        modifyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(modifyTable);

        javax.swing.GroupLayout PanelModificarLayout = new javax.swing.GroupLayout(PanelModificar);
        PanelModificar.setLayout(PanelModificarLayout);
        PanelModificarLayout.setHorizontalGroup(
            PanelModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelModificarLayout.createSequentialGroup()
                .addComponent(PanelRegistroArticulo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelRegistroLibro2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(PanelModificarLayout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelModificarLayout.setVerticalGroup(
            PanelModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelModificarLayout.createSequentialGroup()
                .addGroup(PanelModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PanelRegistroArticulo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelRegistroLibro2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelGeneral.addTab("Modificar", PanelModificar);

        PanelNotas.setBackground(new java.awt.Color(255, 204, 204));

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        jLabel18.setText("¬øEn qu√© apartado desea a√±adirla?");

        bookAddNotaRadioBtn.setBackground(new java.awt.Color(255, 153, 153));
        bookAddNotaRadioBtn.setSelected(true);
        bookAddNotaRadioBtn.setText("Libro");
        bookAddNotaRadioBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bookAddNotaRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookAddNotaRadioBtnActionPerformed(evt);
            }
        });

        articleAddNotaRadioBtn.setBackground(new java.awt.Color(255, 153, 153));
        articleAddNotaRadioBtn.setText("Art√≠culo");
        articleAddNotaRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                articleAddNotaRadioBtnActionPerformed(evt);
            }
        });

        bookOrArtSearchBtn.setText("Buscar");
        bookOrArtSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookOrArtSearchBtnActionPerformed(evt);
            }
        });

        showLibArtEnNotasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(showLibArtEnNotasTable);

        noteAsociarTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(noteAsociarTable);

        jButton1.setText("Buscar notas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel20.setText("Seleccione las filas que desea unir");

        jButton2.setText("Asociar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel21.setText("y pulse asociar");

        jButton5.setText("Ver todas las notas de un libro");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Ver todas las notas de un art√≠culo");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookAddNotaRadioBtn)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(articleAddNotaRadioBtn)
                                .addGap(63, 63, 63)
                                .addComponent(bookOrArtSearchBtn))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(61, 61, 61))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(56, 56, 56)
                .addComponent(jButton7)
                .addGap(68, 68, 68))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(14, 14, 14)
                        .addComponent(bookAddNotaRadioBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(articleAddNotaRadioBtn)
                            .addComponent(bookOrArtSearchBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(84, 84, 84))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton7))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelNotasLayout = new javax.swing.GroupLayout(PanelNotas);
        PanelNotas.setLayout(PanelNotasLayout);
        PanelNotasLayout.setHorizontalGroup(
            PanelNotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelNotasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 779, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelNotasLayout.setVerticalGroup(
            PanelNotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelNotasLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelGeneral.addTab("Asociar", PanelNotas);

        jPanel5.setBackground(new java.awt.Color(255, 204, 51));

        jLabel19.setText("A√±ada un tema para su nota");

        jLabel23.setText("A√±ada la descripci√≥n de su nota");

        addNoteTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNoteTxtFieldActionPerformed(evt);
            }
        });

        addNoteTxtArea.setColumns(20);
        addNoteTxtArea.setRows(5);
        jScrollPane3.setViewportView(addNoteTxtArea);

        noteAddTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(noteAddTable);

        modifyNoteBtn.setText("Modificar");
        modifyNoteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyNoteBtnActionPerformed(evt);
            }
        });

        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        saveNoteBtn.setText("Guardar");
        saveNoteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveNoteBtnActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel25.setText("Puede buscar notas ya existentes");

        jButton6.setText("Eliminar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton3.setText("Guardar cambios");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                .addComponent(addNoteTxtField, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(28, 28, 28)
                        .addComponent(modifyNoteBtn)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(130, 130, 130))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(135, 135, 135))))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addComponent(saveNoteBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addComponent(addNoteTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveNoteBtn)
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(modifyNoteBtn)
                    .addComponent(jButton6))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(78, 78, 78))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        PanelGeneral.addTab("A√±ada notas", jPanel3);

        jLabel1.setText("BIBLIOTECA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1))
            .addComponent(PanelGeneral, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ISSNArticuloRegistroTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISSNArticuloRegistroTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ISSNArticuloRegistroTxtFieldActionPerformed

    private void TituloArticuloRegistroTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TituloArticuloRegistroTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TituloArticuloRegistroTxtFieldActionPerformed

    private void AutorArticuloRegistroTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutorArticuloRegistroTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AutorArticuloRegistroTxtFieldActionPerformed

    private void PFinArticuloRegistroTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PFinArticuloRegistroTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PFinArticuloRegistroTxtFieldActionPerformed

    private void ISBNLibroRegistroTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISBNLibroRegistroTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ISBNLibroRegistroTxtFieldActionPerformed

    private void TituloLibroRegistroTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TituloLibroRegistroTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TituloLibroRegistroTxtFieldActionPerformed

    private void AutorLibroRegistroTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutorLibroRegistroTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AutorLibroRegistroTxtFieldActionPerformed

    private void YearLibroRegistroTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearLibroRegistroTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_YearLibroRegistroTxtFieldActionPerformed

    
    /**
     * Metodo que guarda un articulo al pulsar el boton
     * Limpia todo el registro despu√©s de haberlo guardado
     * @param evt 
     */
    private void SaveArticuloRegistroBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveArticuloRegistroBtnActionPerformed
        if ((Utilidades.validaString(AutorArticuloRegistroTxtField.getText())== false)) {
            JOptionPane.showMessageDialog(null,"El nombre del autor no puede tener n√∫meros, por favor, introduzca solo letras.");
        }else
        if(ISSNArticuloRegistroTxtField.getText().toString().length()>45 | TituloArticuloRegistroTxtField.getText().toString().length()>45 | AutorArticuloRegistroTxtField.getText().toString().length()>45 | RevistaArticuloRegistroTxtField.getText().toString().length()>45 | PInicioArticuloRegistroTxtField.getText().toString().length()>45 | PFinArticuloRegistroTxtField.getText().toString().length()>45 | MesArticuloRegistroTxtField.getText().toString().length()>2 | YearArticuloRegistroTxtField.getText().toString().length()>4) {
            JOptionPane.showMessageDialog(null, "por favor, introduzca valores v√°lidos: ISSN, Titulo, Autor y Revista no pueden ser mayores de 45 caracteres; mes no puede ser mayor de 2 ni a√±o mayor de 4");
        }else{  
        saveArticles();
          cleanAllRegister();
        }
    }//GEN-LAST:event_SaveArticuloRegistroBtnActionPerformed

    /**
     * Metodo que guarda un articulo en la base de datos
     */
    
    public void saveArticles(){
    
     int PIni, PFin, Mes, Anio;
         PIni = Utilidades.validaInt(PInicioArticuloRegistroTxtField.getText());
         PFin = Utilidades.validaInt(PFinArticuloRegistroTxtField.getText());
         Mes = Utilidades.validaInt(MesArticuloRegistroTxtField.getText());
         Anio = Utilidades.validaInt(YearArticuloRegistroTxtField.getText());
         
         try {
            PreparedStatement pps = con.prepareStatement("INSERT INTO Articulo (ISSN, Titulo, Autor, Nom_revista, Pag_inicio, Pag_fin, Mes, Anio) VALUES (?,?,?,?,?,?,?,?)");
           
            if (TituloArticuloRegistroTxtField.getText().equals("") | AutorArticuloRegistroTxtField.getText().equals("") | RevistaArticuloRegistroTxtField.getText().equals("")){
                
                JOptionPane.showMessageDialog(null,"Error, ingrese titulo, autor y revista");
            
            }else{
         
                pps.setString(1, ISSNArticuloRegistroTxtField.getText());
                pps.setString(2, TituloArticuloRegistroTxtField.getText());
                pps.setString(3, AutorArticuloRegistroTxtField.getText());
                pps.setString(4, RevistaArticuloRegistroTxtField.getText());
                pps.setInt(5, PIni);
                pps.setInt(6, PFin);
                pps.setInt(7, Mes);
                pps.setInt(8, Anio);

                pps.executeUpdate();        
                 
                JOptionPane.showMessageDialog(null, "Datos guardados");
            }   
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    
    
    private void searchBookComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBookComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBookComboBoxActionPerformed

    /**
     * Metodo que pone visibles los botones adecuados para el radioButton de articulo
     * @param evt 
     */
    
    private void ArticuloSearchRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArticuloSearchRadioBtnActionPerformed

        if(ArticuloSearchRadioBtn.isSelected()) { 
            searchArticleComboBox.setVisible(true);
            searchAllArticleBtn.setVisible(true);
            searchAllNotasBtn.setVisible(false);
            searchArticleBtn.setVisible(true);
            searchNotasBtn.setVisible(false);
            searchBookBtn.setVisible(false);
            searchAllBookBtn.setVisible(false);
            searchBookComboBox.setVisible(false);
            allAtributeNotaComboBox.setVisible(false);

          }
        
    }//GEN-LAST:event_ArticuloSearchRadioBtnActionPerformed

    private void bookISBNModifyTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookISBNModifyTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookISBNModifyTxtFieldActionPerformed

    private void bookTituloModifyTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookTituloModifyTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookTituloModifyTxtFieldActionPerformed

    private void bookAutorModifyTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookAutorModifyTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookAutorModifyTxtFieldActionPerformed
    
    private void bookAnioModifyTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookAnioModifyTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookAnioModifyTxtFieldActionPerformed

    /**
     * Metodo para insertar un libro en la base de datos
     * @param ISBN String
     * @param titulo String
     * @param autor String
     * @param editorial String
     * @param n_pags int
     * @param anio int
     */
    
    private void insertarLibro(String ISBN, String titulo, String autor, String editorial, int n_pags, int anio){
 
        if (Utilidades.validaString(autor) == false) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un autor valido");
        }else{
        
         try {
            PreparedStatement pps = con.prepareStatement("{call insertarLibro(?,?,?,?,?,?)}");
                pps.setString(1, ISBN);
                pps.setString(2, titulo);
                pps.setString(3, autor);
                pps.setString(4, editorial);
                pps.setInt(5, n_pags);
                pps.setInt(6, anio); 
                pps.executeUpdate();        
                pps.close();
                JOptionPane.showMessageDialog(null, "Datos guardados");
               
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    
    
    }
    
    /**
     * Metodo para guardar un Libro
     * @param evt 
     */
    private void SaveLibroRegistroBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveLibroRegistroBtnActionPerformed
       int n_pags = Utilidades.validaInt(PgNumLibroRegistroTxtField.getText());
       int anio = Utilidades.validaInt(YearLibroRegistroTxtField.getText());
        
        if (TituloLibroRegistroTxtField.getText().equals("") | AutorLibroRegistroTxtField.getText().equals("")){                
                JOptionPane.showMessageDialog(null,"Error, ingrese titulo y autor");  
        }else if(ISBNLibroRegistroTxtField.getText().toString().length()>45 | TituloLibroRegistroTxtField.getText().toString().length()>45 | AutorLibroRegistroTxtField.getText().toString().length()>45 | EditorialLibroRegistroTxtField.getText().toString().length()>45 | PgNumLibroRegistroTxtField.getText().toString().length()>45 | YearLibroRegistroTxtField.getText().toString().length()>4) {
            JOptionPane.showMessageDialog(null, "por favor, introduzca valores v√°lidos: ISBN, Titulo, Autor y Editorial no pueden ser mayores de 45 caracteres; ni a√±o mayor de 4");
        }else if ((Utilidades.validaString(AutorLibroRegistroTxtField.getText())== false)) {
            JOptionPane.showMessageDialog(null,"El nombre del autor no puede tener n√∫meros, por favor, introduzca solo letras.");
        }else{
        insertarLibro(ISBNLibroRegistroTxtField.getText(),TituloLibroRegistroTxtField.getText(),AutorLibroRegistroTxtField.getText(),EditorialLibroRegistroTxtField.getText(),n_pags,anio);
        }
        cleanAllRegister();
    }//GEN-LAST:event_SaveLibroRegistroBtnActionPerformed

    /**
     * Metodo para mostrar en la tabla los datos de los libros
     */
    
      public void showBookTable() {
            DefaultTableModel tablaLibro = new DefaultTableModel();
            tablaLibro.addColumn("Id");
            tablaLibro.addColumn("ISBN");
            tablaLibro.addColumn("Titulo");
            tablaLibro.addColumn("Autor");
            tablaLibro.addColumn("Editorial");
            tablaLibro.addColumn("Numero pags");
            tablaLibro.addColumn("Anio");
            
            searchTable.setModel(tablaLibro);
            
            String sql = "{call listarTodoLibros}";
            
            String datos [] = new String [7];
            
        try {   
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                datos [0] = rs.getString(1);
                datos [1] = rs.getString(2);
                datos [2] = rs.getString(3);
                datos [3] = rs.getString(4);
                datos [4] = rs.getString(5);
                datos [5] = rs.getString(6);
                datos [6] = rs.getString(7);
                tablaLibro.addRow(datos);
            } 
            searchTable.setModel(tablaLibro);
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    
    /**
     * Metodo para mostrar en la tabla los libros con el parametro introducido
     * @param value String
     */
   public void showBookTableByAttribute (String value) {
        DefaultTableModel tablaLibro = new DefaultTableModel();
        tablaLibro.addColumn("Id");
        tablaLibro.addColumn("ISBN");
        tablaLibro.addColumn("Titulo");
        tablaLibro.addColumn("Autor");
        tablaLibro.addColumn("Editorial");
        tablaLibro.addColumn("Numero de paginas");
        tablaLibro.addColumn("A√±o");

        searchTable.setModel(tablaLibro);
            
        String sql = "SELECT * FROM Libro WHERE "+attribute+" LIKE '%"+value+"%'";
            
        String columnasTabla [] = new String [7];
            
        try {   
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                columnasTabla [0] = rs.getString(1);
                columnasTabla [1] = rs.getString(2);
                columnasTabla [2] = rs.getString(3);
                columnasTabla [3] = rs.getString(4);
                columnasTabla [4] = rs.getString(5);
                columnasTabla [5] = rs.getString(6);
                columnasTabla [6] = rs.getString(7);

                                
                tablaLibro.addRow(columnasTabla);
            } 
            searchTable.setModel(tablaLibro);
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
   
   /**
    * Metodo para mostrar en la tabla los articulos
    */
   
    public void showArticleTable() {
            DefaultTableModel tablaArticulo = new DefaultTableModel();
            tablaArticulo.addColumn("Id");
            tablaArticulo.addColumn("ISSN");
            tablaArticulo.addColumn("Titulo");
            tablaArticulo.addColumn("Autor");
            tablaArticulo.addColumn("Nombre revista");
            tablaArticulo.addColumn("Pagina inicio");
            tablaArticulo.addColumn("Pagina fin");
            tablaArticulo.addColumn("Mes");
            tablaArticulo.addColumn("A√±o");
            
            searchTable.setModel(tablaArticulo);
            
            String sql = "{call listarTodoArticulos}";
            
            String columnasTabla [] = new String [7];
            
        try {   
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                columnasTabla [0] = rs.getString(1);
                columnasTabla [1] = rs.getString(2);
                columnasTabla [2] = rs.getString(3);
                columnasTabla [3] = rs.getString(4);
                columnasTabla [4] = rs.getString(5);
                columnasTabla [5] = rs.getString(6);
                columnasTabla [6] = rs.getString(7);
        
                tablaArticulo.addRow(columnasTabla);
            } 
            searchTable.setModel(tablaArticulo);
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
   
   /**
    * Metodo para mostrar los articulos con el parametro introducido
    * @param value String
    */
   public void showArticleTableByAttribute (String value) {
        DefaultTableModel tablaArticulo = new DefaultTableModel();
        tablaArticulo.addColumn("Id");
        tablaArticulo.addColumn("ISSN");
        tablaArticulo.addColumn("Titulo");
        tablaArticulo.addColumn("Autor");
        tablaArticulo.addColumn("Nombre revista");
        tablaArticulo.addColumn("Pagina inicio");
        tablaArticulo.addColumn("Pagina fin");
        tablaArticulo.addColumn("Mes");
        tablaArticulo.addColumn("A√±o");

        searchTable.setModel(tablaArticulo);
            
        String sql = "SELECT * FROM Articulo WHERE " + attribute + " LIKE '%" + value + "%'";
            
        String columnasTabla [] = new String [7];
            
        try {   
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                columnasTabla [0] = rs.getString(1);
                columnasTabla [1] = rs.getString(2);
                columnasTabla [2] = rs.getString(3);
                columnasTabla [3] = rs.getString(4);
                columnasTabla [4] = rs.getString(5);
                columnasTabla [5] = rs.getString(6);
                columnasTabla [6] = rs.getString(7);
        
                tablaArticulo.addRow(columnasTabla);
            } 
            searchTable.setModel(tablaArticulo);
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
   
   /**
    * Metodo para mostrar las notas en la tabla
    */
    public void showNoteTable() {
            DefaultTableModel tablaNota = new DefaultTableModel();
            tablaNota.addColumn("Id");
            tablaNota.addColumn("Tema");
            tablaNota.addColumn("Descripcion");
            
            
            searchTable.setModel(tablaNota);
            
            String sql = "{call listarTodoNotas}";
            
            String columnasTabla [] = new String [3];
            
        try {   
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                columnasTabla [0] = rs.getString(1);
                columnasTabla [1] = rs.getString(2);
                columnasTabla [2] = rs.getString(3);
        
                tablaNota.addRow(columnasTabla);
            } 
            searchTable.setModel(tablaNota);
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
   
    /**
     * Metodo para mostrar las notas que tienen el parametro introducido
     * @param value String
     */
    public void showNoteTableByAttribute (String value) {
        DefaultTableModel tablaNota = new DefaultTableModel();
        tablaNota.addColumn("Id");
        tablaNota.addColumn("Tema");
        tablaNota.addColumn("Descripcion");
       ;

        searchTable.setModel(tablaNota);
            
        String sql = "SELECT * FROM Nota WHERE " + attribute + " LIKE '%" + value + "%'";
            
        String columnasTabla [] = new String [3];
            
        try {   
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                columnasTabla [0] = rs.getString(1);
                columnasTabla [1] = rs.getString(2);
                columnasTabla [2] = rs.getString(3);
        
                tablaNota.addRow(columnasTabla);
            } 
            searchTable.setModel(tablaNota);
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    
    /**
     * Metodo para a√±adir elementos a la comboBox de Libro
     */
    public void addItemsToBookComboBox() {
        searchBookComboBox.addItem("idLibro");
        searchBookComboBox.addItem("ISBN");
        searchBookComboBox.addItem("Titulo");
        searchBookComboBox.addItem("Autor");
        searchBookComboBox.addItem("Editorial");
        searchBookComboBox.addItem("Numero_pags");
        searchBookComboBox.addItem("Anio");
   
    }
    
    /**
     * Metodo para a√±adir elementos a la comboBox de Articulo
     */
     public void addItemsToArticleComboBox() {
         searchArticleComboBox.addItem("idArticulo");
        searchArticleComboBox.addItem("ISSN");
        searchArticleComboBox.addItem("Titulo");
        searchArticleComboBox.addItem("Autor");
        searchArticleComboBox.addItem("Nom_revista");
        searchArticleComboBox.addItem("Pag_inicio");
        searchArticleComboBox.addItem("Pag_fin");
        searchArticleComboBox.addItem("Mes");
        searchArticleComboBox.addItem("Anio");
    }
     /**
     * Metodo para a√±adir elementos a la comboBox de Nota
     */
     public void addItemsToNotaComboBox() {
        allAtributeNotaComboBox.addItem("idNota");
        allAtributeNotaComboBox.addItem("Tema");
        allAtributeNotaComboBox.addItem("Descripcion");


    }
        
     /**
      * Metodo para crear el buttonGroup con los radioButton de Buscar 
      */   
      public void createButtonGroupBuscar() {
        searchBtnGroup.add(libroSearchRadioBtn);
        searchBtnGroup.add(ArticuloSearchRadioBtn);
        searchBtnGroup.add(NotaSearchRadioBtn);
        searchArticleComboBox.setVisible(false);
            searchAllArticleBtn.setVisible(false);
            searchAllNotasBtn.setVisible(false);
            searchArticleBtn.setVisible(false);
            searchNotasBtn.setVisible(false);
            searchBookBtn.setVisible(true);
            searchAllBookBtn.setVisible(true);
            searchBookComboBox.setVisible(true);
            allAtributeNotaComboBox.setVisible(false);
  
    }
      
      /**
       * Metodo para crear el buttonGroup con los radioButton de Nota
       */
      
       public void createButtonGroupAddNota() {
        addNotaBtnGroup.add(bookAddNotaRadioBtn);
        addNotaBtnGroup.add(articleAddNotaRadioBtn);
    }
       
       /**
        * Metodo para crear el ButtonGroup de Modificar
        */
       
        public void createButtonGroupModify() {
        modifyBtnGroup.add(articleModifyRadioBtn);
        modifyBtnGroup.add(bookModifyRadioBtn);
        bookISBNModifyTxtField.setEditable(false);
        bookTituloModifyTxtField.setEditable(false);
        bookAutorModifyTxtField.setEditable(false);
        bookEditorialModifyTxtField.setEditable(false);
        bookNpagslModifyTxtField.setEditable(false);
        bookAnioModifyTxtField.setEditable(false);
        bookDeleteModifyBtn.setEnabled(false);
        bookModificarModifyBtn.setEnabled(false);
        bookSaveModifyBtn.setEnabled(false);
        searchAllArticlesModify();
        
    }
     
     /**
      * Metodo para buscar los libros por parametros introducidos
      * @param evt 
      */
    private void searchBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBookBtnActionPerformed
        if(searchComboTxtField.getText().isEmpty()){
       JOptionPane.showMessageDialog(null, "Por favor, introduzca el dato que est√° buscando"); 
        }else{
        attribute = searchBookComboBox.getSelectedItem().toString();
        showBookTableByAttribute(searchComboTxtField.getText());
        searchComboTxtField.setText("");}
    }//GEN-LAST:event_searchBookBtnActionPerformed

    /**
     * Metodo para buscar los articulos por parametros introducidos
     * @param evt 
     */
    
    private void searchArticleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchArticleBtnActionPerformed
        if(searchComboTxtField.getText().isEmpty()){
       JOptionPane.showMessageDialog(null, "Por favor, introduzca el dato que est√° buscando"); 
        }else{
         attribute = searchArticleComboBox.getSelectedItem().toString();
        showArticleTableByAttribute(searchComboTxtField.getText());
        searchComboTxtField.setText("");}
    }//GEN-LAST:event_searchArticleBtnActionPerformed

    /**
     * Metodo para mostrar la tabla si el radiobutton de libro esta seleccionado
     * @param evt 
     */
    
    private void searchAllBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAllBookBtnActionPerformed
        
        if (libroSearchRadioBtn.isSelected()) {
             showBookTable();
        }
        
    }//GEN-LAST:event_searchAllBookBtnActionPerformed

    /**
     * Metodo para mostrar la tabla si el radiobutton de articulo esta seleccionado
     * @param evt 
     */
    private void searchAllArticleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAllArticleBtnActionPerformed
        if (ArticuloSearchRadioBtn.isSelected()) {
                showArticleTable();        
        }
        
    }//GEN-LAST:event_searchAllArticleBtnActionPerformed

    /**
     * Metodo para mostrar la tabla si el radiobutton de nota esta seleccionado 
     * @param evt 
     */
    
    private void searchAllNotasBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAllNotasBtnActionPerformed
        
        if (NotaSearchRadioBtn.isSelected()) {
            showNoteTable();
        }
        
    }//GEN-LAST:event_searchAllNotasBtnActionPerformed

    /**
     * Metodo para poner visibles los botones de libro
     * @param evt 
     */
    
    private void libroSearchRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libroSearchRadioBtnActionPerformed
        if (libroSearchRadioBtn.isSelected()) {
            searchArticleComboBox.setVisible(false);
            searchAllArticleBtn.setVisible(false);
            searchAllNotasBtn.setVisible(false);
            searchArticleBtn.setVisible(false);
            searchNotasBtn.setVisible(false);
            searchBookBtn.setVisible(true);
            searchAllBookBtn.setVisible(true);
            searchBookComboBox.setVisible(true);
            allAtributeNotaComboBox.setVisible(false);
          }
    }//GEN-LAST:event_libroSearchRadioBtnActionPerformed

    /**
     * Metodo para poner visibles los botones de nota
     * @param evt 
     */
    private void NotaSearchRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotaSearchRadioBtnActionPerformed

        if(NotaSearchRadioBtn.isSelected()) { 
            searchArticleComboBox.setVisible(false);
            searchBookComboBox.setVisible(false);
            searchAllArticleBtn.setVisible(false);
            searchAllNotasBtn.setVisible(true);
            searchArticleBtn.setVisible(false);
            searchNotasBtn.setVisible(true);
            searchBookBtn.setVisible(false);
            searchAllBookBtn.setVisible(false);
        allAtributeNotaComboBox.setVisible(true);
        }
    }//GEN-LAST:event_NotaSearchRadioBtnActionPerformed

    /**
     * Metodo para exportar los libros
     */
    
    public void exportBooks(){
    ResultSet rs = null;
        StringBuffer strBuf = null;        
        try {
            Statement stm = con.createStatement();
            rs = stm.executeQuery("SELECT * FROM Libro");
            strBuf = new StringBuffer();            
            FileWriter fw = new FileWriter(new File("Libros.txt" ));
            String data_row = "";                          
            while(rs.next()){
                data_row = "\n";
                data_row += rs.getInt("idLibro");
                 data_row += "," + rs.getString("ISBN").trim();
                data_row += "," + rs.getString("Titulo").trim();
                data_row += "," + rs.getString("Autor").trim();
                data_row += "," + rs.getString("Editorial").trim();
                data_row += "," + rs.getString("Numero_pags").trim();
                data_row += "," + rs.getString("Anio").trim();
                fw.write(data_row);
            }
            fw.close();
            rs.close();
             JOptionPane.showMessageDialog(null, "Exportado correctamente");
        } catch (IOException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
    /**
     * Metodo para exportar los articulos
     */
    public void exportArticles(){
    ResultSet rs = null;
        StringBuffer strBuf = null;        
        try {
            Statement stm = con.createStatement();
            rs = stm.executeQuery("SELECT * FROM Articulo");
            strBuf = new StringBuffer();            
            FileWriter fw = new FileWriter(new File("Articulos.txt" ));
            String data_row = "";                          
            while(rs.next()){
                data_row = "\n";
                data_row += rs.getInt("idArticulo");
                data_row += "," + rs.getString("ISSN").trim();
                data_row += "," + rs.getString("Titulo").trim();
                data_row += "," + rs.getString("Autor").trim();
                data_row += "," + rs.getString("Nom_revista").trim();
                data_row += "," + rs.getString("Pag_inicio").trim();
                data_row += "," + rs.getString("Pag_fin").trim();
                data_row += "," + rs.getString("Mes").trim();
                data_row += "," + rs.getString("Anio").trim();
                fw.write(data_row);
            }
            fw.close();
            rs.close();
             JOptionPane.showMessageDialog(null, "Exportado correctamente");
        } catch (IOException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
    /**
     * Metodo para exportar las notas
     */
     public void exportNotes(){
    ResultSet rs = null;
        StringBuffer strBuf = null;        
        try {
            Statement stm = con.createStatement();
            rs = stm.executeQuery("SELECT * FROM Nota");
            strBuf = new StringBuffer();            
            FileWriter fw = new FileWriter(new File("Notas.txt"));
            String data_row = "";                          
            while(rs.next()){
                data_row = "\n";
                data_row += rs.getInt("idNota");
                 data_row += "," + rs.getString("Tema").trim();
                data_row += "," + rs.getString("Descripcion").trim();
                fw.write(data_row);
            }
            fw.close();
            
            rs.close();
            JOptionPane.showMessageDialog(null, "Exportado correctamente");
        } catch (IOException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
     /**
      * Metodo que acciona el boton para exportar dependiendo de lo seleccionado
      * @param evt 
      */
     
    private void exportarLibrosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportarLibrosBtnActionPerformed

            if(libroSearchRadioBtn.isSelected()){
                exportBooks(); 
        } else if(ArticuloSearchRadioBtn.isSelected()){
                exportArticles();
        }else if(NotaSearchRadioBtn.isSelected()){
                exportNotes();
        }     

        
    }//GEN-LAST:event_exportarLibrosBtnActionPerformed
    
    /**
     * Metodo para listar los articulos 
     */
    public void searchAllArticlesAddNotes(){
    if(articleAddNotaRadioBtn.isSelected()){
        DefaultTableModel articleTable = new DefaultTableModel();
        articleTable.addColumn("Id");
        articleTable.addColumn("ISSN");
        articleTable.addColumn("Titulo");
        articleTable.addColumn("Autor");
        articleTable.addColumn("Nom_revista");
        articleTable.addColumn("Pag_inicio");
        articleTable.addColumn("Pag_fin");
        articleTable.addColumn("Mes");
        articleTable.addColumn("A√±o");
        

        showLibArtEnNotasTable.setModel(articleTable);
            
        try {  
            CallableStatement cst = con.prepareCall("{call listarTodoArticulos}");
            cst.execute();
            ResultSet rs = cst.executeQuery();
            String datos [] = new String [9];
            while (rs.next()) {               
                    datos [0] = rs.getString(1);
                    datos [1] = rs.getString(2);
                    datos [2] = rs.getString(3);
                    datos [3] = rs.getString(4);
                    datos [4] = rs.getString(5);
                    datos [5] = rs.getString(6);
                    datos [6] = rs.getString(7);
                    datos [7] = rs.getString(8);
                    datos [8] = rs.getString(9);
                    articleTable.addRow(datos);
            } 
            
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }
 
         }
    }
    /**
     * Metodo para listar los libros
     */
    public void searchAllBookAddNotaTable(){
    
        if(bookAddNotaRadioBtn.isSelected()){
        DefaultTableModel bookTable = new DefaultTableModel();
        bookTable.addColumn("Id");
        bookTable.addColumn("ISBN");
        bookTable.addColumn("Titulo");
        bookTable.addColumn("Autor");
        bookTable.addColumn("Editorial");
        bookTable.addColumn("Num_pags");
        bookTable.addColumn("A√±o");   

        showLibArtEnNotasTable.setModel(bookTable);
              
        try {   
            CallableStatement cst = con.prepareCall("{call listarTodoLibros}");
            cst.execute();
            ResultSet rs = cst.executeQuery();
            String datos [] = new String[7];
            while (rs.next()) {               
                    datos [0] = rs.getString(1);
                    datos [1] = rs.getString(2);
                    datos [2] = rs.getString(3);
                    datos [3] = rs.getString(4);
                    datos [4] = rs.getString(5);
                    datos [5] = rs.getString(6);
                    datos [6] = rs.getString(7);
                    bookTable.addRow(datos);
            } 
        
            showLibArtEnNotasTable.setModel(bookTable);
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }
    }     
}
    
    /**
     * Metodo para listar todos los libros
     * @param evt 
     */
    private void bookAddNotaRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookAddNotaRadioBtnActionPerformed
        if(bookAddNotaRadioBtn.isSelected()){
        DefaultTableModel bookTable = new DefaultTableModel();
        bookTable.addColumn("Id");
        bookTable.addColumn("ISBN");
        bookTable.addColumn("Titulo");
        bookTable.addColumn("Autor");
        bookTable.addColumn("Editorial");
        bookTable.addColumn("Num_pags");
        bookTable.addColumn("A√±o");   

        showLibArtEnNotasTable.setModel(bookTable);
              
        try {   
            CallableStatement cst = con.prepareCall("{call listarTodoLibros}");
            cst.execute();
            ResultSet rs = cst.executeQuery();
            String datos [] = new String[7];
            while (rs.next()) {               
                    datos [0] = rs.getString(1);
                    datos [1] = rs.getString(2);
                    datos [2] = rs.getString(3);
                    datos [3] = rs.getString(4);
                    datos [4] = rs.getString(5);
                    datos [5] = rs.getString(6);
                    datos [6] = rs.getString(7);
                    bookTable.addRow(datos);
            } 
        
            showLibArtEnNotasTable.setModel(bookTable);
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }     
        
    }//GEN-LAST:event_bookAddNotaRadioBtnActionPerformed

    private void articleAddNotaRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_articleAddNotaRadioBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_articleAddNotaRadioBtnActionPerformed

    
    /**
     * Metodo para listar todos los libros si esta seleccionado el radioButton Libro
     * @param evt 
     */
    private void bookModifyRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookModifyRadioBtnActionPerformed
       
        if(bookModifyRadioBtn.isSelected()){
        bookISBNModifyTxtField.setEditable(true);
        bookTituloModifyTxtField.setEditable(true);
        bookAutorModifyTxtField.setEditable(true);
        bookEditorialModifyTxtField.setEditable(true);
        bookNpagslModifyTxtField.setEditable(true);
        bookAnioModifyTxtField.setEditable(true);
        bookDeleteModifyBtn.setEnabled(true);
        bookModificarModifyBtn.setEnabled(true);
        bookSaveModifyBtn.setEnabled(true);
        articISSNModifyTxtField.setEditable(false);
        articTituloModifyTxtField.setEditable(false);
        articAutorModifyTxtField.setEditable(false);
        articRevistaModifyTxtField.setEditable(false);
        articPiniModifyTxtField.setEditable(false);
        articPFinModifyTxtField.setEditable(false);
        articMesModifyTxtField.setEditable(false);
        articAnioModifyTxtField.setEditable(false);
        articDeleteModifyBtn.setEnabled(false);
        articModificarModifyBtn.setEnabled(false);
        articSaveModifyBtn.setEnabled(false);
        if(bookModifyRadioBtn.isSelected()){
        DefaultTableModel bookTable = new DefaultTableModel();
        bookTable.addColumn("Id");
        bookTable.addColumn("ISBN");
        bookTable.addColumn("Titulo");
        bookTable.addColumn("Autor");
        bookTable.addColumn("Editorial");
        bookTable.addColumn("Num_pags");
        bookTable.addColumn("A√±o");   

        modifyTable.setModel(bookTable);
              
        try {   
            CallableStatement cst = con.prepareCall("{call listarTodoLibros}");
            cst.execute();
            ResultSet rs = cst.executeQuery();
            String datos [] = new String[7];
            while (rs.next()) {               
                    datos [0] = rs.getString(1);
                    datos [1] = rs.getString(2);
                    datos [2] = rs.getString(3);
                    datos [3] = rs.getString(4);
                    datos [4] = rs.getString(5);
                    datos [5] = rs.getString(6);
                    datos [6] = rs.getString(7);
                    bookTable.addRow(datos);
            } 
        
            modifyTable.setModel(bookTable);
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }
    }   }  
    }//GEN-LAST:event_bookModifyRadioBtnActionPerformed

    /**
     * Metodo para listar los articulos si esta seleccionado el radioButton Articulo
     * @param evt 
     */
    
    private void articleModifyRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_articleModifyRadioBtnActionPerformed
        if (articleModifyRadioBtn.isSelected()) {
        articISSNModifyTxtField.setEditable(true);
        articTituloModifyTxtField.setEditable(true);
        articAutorModifyTxtField.setEditable(true);
        articRevistaModifyTxtField.setEditable(true);
        articPiniModifyTxtField.setEditable(true);
        articPFinModifyTxtField.setEditable(true);
        articMesModifyTxtField.setEditable(true);
        articAnioModifyTxtField.setEditable(true);
        articDeleteModifyBtn.setEnabled(true);
        articModificarModifyBtn.setEnabled(true);
        articSaveModifyBtn.setEnabled(true);
        bookISBNModifyTxtField.setEditable(false);
        bookTituloModifyTxtField.setEditable(false);
        bookAutorModifyTxtField.setEditable(false);
        bookEditorialModifyTxtField.setEditable(false);
        bookNpagslModifyTxtField.setEditable(false);
        bookAnioModifyTxtField.setEditable(false);
        bookDeleteModifyBtn.setEnabled(false);
        bookModificarModifyBtn.setEnabled(false);
        bookSaveModifyBtn.setEnabled(false);
        searchAllArticlesModify();
        }
    }//GEN-LAST:event_articleModifyRadioBtnActionPerformed

    /**
     * Metodo para listar los articulos
     */
    public void searchAllArticlesModify(){
    
        cleanAllModify();
        
    if (articleModifyRadioBtn.isSelected()) {
        DefaultTableModel articleTable = new DefaultTableModel();
        articleTable.addColumn("Id");
        articleTable.addColumn("ISSN");
        articleTable.addColumn("Titulo");
        articleTable.addColumn("Autor");
        articleTable.addColumn("Nom_revista");
        articleTable.addColumn("Pag_inicio");
        articleTable.addColumn("Pag_fin");
        articleTable.addColumn("Mes");
        articleTable.addColumn("A√±o");
        

        modifyTable.setModel(articleTable);
            
        try {  

            CallableStatement cst = con.prepareCall("{call listarTodoArticulos}");
            cst.execute();
            ResultSet rs = cst.executeQuery();
            String datos [] = new String [9];
            while (rs.next()) {               
                    datos [0] = rs.getString(1);
                    datos [1] = rs.getString(2);
                    datos [2] = rs.getString(3);
                    datos [3] = rs.getString(4);
                    datos [4] = rs.getString(5);
                    datos [5] = rs.getString(6);
                    datos [6] = rs.getString(7);
                    datos [7] = rs.getString(8);
                    datos [8] = rs.getString(9);
                    articleTable.addRow(datos);
            } 
            
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
  }
    
    /**
     * Metodo para limpiar los textField despues de introducir datos
     */
    public void cleanAllModify() {
        
        articISSNModifyTxtField.setText("");
        articTituloModifyTxtField.setText("");
        articAutorModifyTxtField.setText("");
        articRevistaModifyTxtField.setText("");
        articPiniModifyTxtField.setText("");
        articPFinModifyTxtField.setText("");
        articMesModifyTxtField.setText("");
        articAnioModifyTxtField.setText("");
        
        bookISBNModifyTxtField.setText("");
        bookTituloModifyTxtField.setText("");
        bookAutorModifyTxtField.setText("");
        bookEditorialModifyTxtField.setText("");
        bookNpagslModifyTxtField.setText("");
        bookAnioModifyTxtField.setText("");
 
    }
    
    /**
     * Metodo para limpiar los textField despues de introducir datos
     */
    public void cleanAllRegister() {
        
        ISBNLibroRegistroTxtField.setText("");
        TituloLibroRegistroTxtField.setText("");
        AutorLibroRegistroTxtField.setText("");
        EditorialLibroRegistroTxtField.setText("");
        PgNumLibroRegistroTxtField.setText("");
        YearLibroRegistroTxtField.setText("");
        
        
        ISSNArticuloRegistroTxtField.setText("");
        TituloArticuloRegistroTxtField.setText("");
        AutorArticuloRegistroTxtField.setText("");
        RevistaArticuloRegistroTxtField.setText("");
        PInicioArticuloRegistroTxtField.setText("");
        PFinArticuloRegistroTxtField.setText("");
        MesArticuloRegistroTxtField.setText("");
        YearArticuloRegistroTxtField.setText("");
 
    }
    
    /**
     * Metodo para poner los datos de la tabla articulo en los textFields correspondientes
     * @param evt 
     */
    private void articModificarModifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_articModificarModifyBtnActionPerformed

        int fila = modifyTable.getSelectedRow();
        
        cleanAllModify();
        
        if ((articleModifyRadioBtn.isSelected()) && (fila >= 0)) {

            articISSNModifyTxtField.setText(modifyTable.getValueAt(fila, 1).toString());
            articTituloModifyTxtField.setText(modifyTable.getValueAt(fila, 2).toString());
            articAutorModifyTxtField.setText(modifyTable.getValueAt(fila, 3).toString());
            articRevistaModifyTxtField.setText(modifyTable.getValueAt(fila, 4).toString());
            articPiniModifyTxtField.setText(modifyTable.getValueAt(fila, 5).toString());
            articPFinModifyTxtField.setText(modifyTable.getValueAt(fila, 6).toString());
            articMesModifyTxtField.setText(modifyTable.getValueAt(fila, 7).toString());
            articAnioModifyTxtField.setText(modifyTable.getValueAt(fila, 8).toString());
            
        }

    }//GEN-LAST:event_articModificarModifyBtnActionPerformed

    /**
     * Metodo para actualizar el registro de un libro
     */
    public void updateBookModified(){
         int fila = modifyTable.getSelectedRow();
    if ((bookModifyRadioBtn.isSelected())) { 
            if (bookTituloModifyTxtField.getText().equals("") | bookAutorModifyTxtField.getText().equals("")) {
                JOptionPane.showMessageDialog(null,"Error, por favor, rellene los campos: Titulo y autor");
            }else {               
                try {
                    PreparedStatement pps = con.prepareStatement("UPDATE Libro SET ISBN='"+bookISBNModifyTxtField.getText()+"',Titulo='"+bookTituloModifyTxtField.getText()+"',Autor='"+bookAutorModifyTxtField.getText()+"',Editorial='"+bookEditorialModifyTxtField.getText()+"',Numero_pags='"+bookNpagslModifyTxtField.getText()+"',Anio='"+bookAnioModifyTxtField.getText()+"' WHERE idLibro='"+modifyTable.getValueAt(fila, 0).toString()+"'");
                    pps.executeUpdate();
                     JOptionPane.showMessageDialog(null,"Libro modificado correctamente");
                    
                } catch (SQLException ex) {
                    Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }}
    }
    
    /**
     * Metodo para actualizar el registro de un articulo
     */
    public void updateArticleModified(){
    
        int fila = modifyTable.getSelectedRow();
     
        if (articleModifyRadioBtn.isSelected()) {
            if (articTituloModifyTxtField.getText().equals("") | articAutorModifyTxtField.getText().equals("") | articRevistaModifyTxtField.getText().equals("")) {   
                JOptionPane.showMessageDialog(null,"Error, por favor, rellene los campos: Titulo, autor y nombre de la revista");            
            }else{
                try {
                PreparedStatement pps = con.prepareStatement("UPDATE Articulo SET ISSN='"+articISSNModifyTxtField.getText()+"',Titulo='"+articTituloModifyTxtField.getText()+"',Autor='"+articAutorModifyTxtField.getText()+"',Nom_revista='"+articRevistaModifyTxtField.getText()+"',Pag_inicio='"+articPiniModifyTxtField.getText()+"',Pag_fin='"+articPFinModifyTxtField.getText()+"',Mes='"+articMesModifyTxtField.getText()+"',Anio='"+articAnioModifyTxtField.getText()+"' WHERE idArticulo='"+modifyTable.getValueAt(fila, 0).toString()+"'");
                pps.executeUpdate();
                 JOptionPane.showMessageDialog(null,"Se ha modificado el Articulo correctamente");
                
                } catch (SQLException ex) {
                    Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
        }
             
    }
    
    /**
     * Metodo para actualizar el registro de un articulo y mostrarlo
     * @param evt 
     */
    private void articSaveModifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_articSaveModifyBtnActionPerformed
        
        if(articISSNModifyTxtField.getText().toString().length()>45 | articTituloModifyTxtField.getText().toString().length()>45 | articAutorModifyTxtField.getText().toString().length()>45 | articRevistaModifyTxtField.getText().toString().length()>45 | articPiniModifyTxtField.getText().toString().length()>45 | articPFinModifyTxtField.getText().toString().length()>45 | articMesModifyTxtField.getText().toString().length()>2 | articAnioModifyTxtField.getText().toString().length()>4) {
            JOptionPane.showMessageDialog(null, "por favor, introduzca valores v√°lidos: ISSN, Titulo, Autor y Revista no pueden ser mayores de 45 caracteres; mes no puede ser mayor de 2 ni a√±o mayor de 4");
        }else if ((Utilidades.validaString(articAutorModifyTxtField.getText())== false)) {
            JOptionPane.showMessageDialog(null,"El nombre del autor no puede tener n√∫meros, por favor, introduzca solo letras.");
        }else{
        updateArticleModified();
        searchAllArticlesModify();
        }
    }//GEN-LAST:event_articSaveModifyBtnActionPerformed

    /**
     * Metodo para actualizar los datos de un libro 
     * @param evt 
     */
    private void bookSaveModifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookSaveModifyBtnActionPerformed
       if(bookISBNModifyTxtField.getText().toString().length()>45 | bookTituloModifyTxtField.getText().toString().length()>45 | bookAutorModifyTxtField.getText().toString().length()>45 | bookEditorialModifyTxtField.getText().toString().length()>45 | bookNpagslModifyTxtField.getText().toString().length()>45 | bookAnioModifyTxtField.getText().toString().length()>4) {
            JOptionPane.showMessageDialog(null, "por favor, introduzca valores v√°lidos: ISBN, Titulo, Autor y Editorial no pueden ser mayores de 45 caracteres; ni a√±o mayor de 4");
       }else if ((Utilidades.validaString(bookAutorModifyTxtField.getText())== false)) {
            JOptionPane.showMessageDialog(null,"El nombre del autor no puede tener n√∫meros, por favor, introduzca solo letras."); 
       }else{
        updateBookModified();
       }
    }//GEN-LAST:event_bookSaveModifyBtnActionPerformed

    /**
     * Metodo para colocar los datos de la tabla en los textField correspondientes
     * @param evt 
     */
    private void bookModificarModifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookModificarModifyBtnActionPerformed
        
        int fila = modifyTable.getSelectedRow();
        if ((bookModifyRadioBtn.isSelected()) && (fila >= 0)) {
           
            bookISBNModifyTxtField.setText(modifyTable.getValueAt(fila, 1).toString());
            bookTituloModifyTxtField.setText(modifyTable.getValueAt(fila, 2).toString());
            bookAutorModifyTxtField.setText(modifyTable.getValueAt(fila, 3).toString());
            bookEditorialModifyTxtField.setText(modifyTable.getValueAt(fila, 4).toString());
            bookNpagslModifyTxtField.setText(modifyTable.getValueAt(fila, 5).toString());
            bookAnioModifyTxtField.setText(modifyTable.getValueAt(fila, 6).toString());
            
        }
    }//GEN-LAST:event_bookModificarModifyBtnActionPerformed

    /**
     * Metodo para eliminar el articulo seleccionado en la tabla
     */
    public void deleteRowArticle(){
         int fila = modifyTable.getSelectedRow();
        
        if ((fila >=0)) {
            String valor = modifyTable.getValueAt(fila, 0).toString();
            try {
                PreparedStatement pps = con.prepareStatement("DELETE FROM Articulo WHERE idArticulo='"+valor+"'");
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Entrada eliminada correctamente");
                showArticleTable();
            } catch (SQLException ex) {
                Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}
  
    /**
     * Metodo para eliminar la nota seleccionada en la tabla
     */
    public void deleteRowNote(){
         int fila = noteAddTable.getSelectedRow();
        
        if ((fila >=0)) {
            String valor = noteAddTable.getValueAt(fila, 0).toString();
            try {
                PreparedStatement pps = con.prepareStatement("DELETE FROM Nota WHERE idNota='"+valor+"'");
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Eliminada correctamente");
                showArticleTable();
            } catch (SQLException ex) {
                Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}
    
    /**
     * Metodo para eliminar el libro seleccionado en la tabla
     */
    public void deleteRowBook(){
        
        int fila = modifyTable.getSelectedRow();
         if ((fila >=0)) {
            String valor = modifyTable.getValueAt(fila, 0).toString();
            try {
                PreparedStatement pps = con.prepareStatement("DELETE FROM Libro WHERE idLibro='"+valor+"'");
                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Entrada eliminada correctamente");
                showBookTable();
            } catch (SQLException ex) {
                Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    
    }
    
    /**
     * Metodo para eliminar el articulo y actualizar la tabla
     * @param evt 
     */
    private void articDeleteModifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_articDeleteModifyBtnActionPerformed
            deleteRowArticle();
            searchAllArticlesModify();
    }//GEN-LAST:event_articDeleteModifyBtnActionPerformed

    /**
     * Metodo para eliminar el libro
     * @param evt 
     */
    private void bookDeleteModifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookDeleteModifyBtnActionPerformed
            deleteRowBook();
        
    }//GEN-LAST:event_bookDeleteModifyBtnActionPerformed

    /**
     * Metodo para mostrar los datos en la tabla segun el radiobutton seleccionado
     * @param evt 
     */
    private void bookOrArtSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookOrArtSearchBtnActionPerformed
        
        if (articleAddNotaRadioBtn.isSelected()) {
            searchAllArticlesAddNotes();
        }else if (bookAddNotaRadioBtn.isSelected()) {
            searchAllBookAddNotaTable();
        }
        
         
    }//GEN-LAST:event_bookOrArtSearchBtnActionPerformed

    /**
     * Metodo para mostrar las notas en la tabla segun el atributo seleccionado
     * @param evt 
     */
    private void searchNotasBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchNotasBtnActionPerformed
       if(searchComboTxtField.getText().isEmpty()){
       JOptionPane.showMessageDialog(null, "Por favor, introduzca el dato que est√° buscando"); 
        }else{
        attribute = allAtributeNotaComboBox.getSelectedItem().toString();
        showNoteTableByAttribute(searchComboTxtField.getText());
        searchComboTxtField.setText("");
       }
    }//GEN-LAST:event_searchNotasBtnActionPerformed

    /**
     * Metodo para listar las notas
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 
        DefaultTableModel noteTable = new DefaultTableModel();
        noteTable.addColumn("IdNota");
        noteTable.addColumn("Tema");
        noteTable.addColumn("Descripcion");
        

        noteAsociarTable.setModel(noteTable);
            
        try {   
            CallableStatement cst = con.prepareCall("{call listarTodoNotas}");
            cst.execute();
            ResultSet rs = cst.executeQuery();
            String datos [] = new String[3];
            while (rs.next()) {               
                    datos [0] = rs.getString(1);
                    datos [1] = rs.getString(2);
                    datos [2] = rs.getString(3);
                    noteTable.addRow(datos);
            } 
        
            noteAsociarTable.setModel(noteTable);
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }
     
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Metodo para asociar los libros y art√≠culos a las notas
     * @param evt 
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       int a, b;
        
        if (bookAddNotaRadioBtn.isSelected()) {
        int fila1 = showLibArtEnNotasTable.getSelectedRow();
        int fila2 = noteAsociarTable.getSelectedRow();
       String valor1, valor2;
       
        if (fila1 >=0 && fila2 >= 0) { 
            valor1 = showLibArtEnNotasTable.getValueAt(fila1, 0).toString();
            valor2 = noteAsociarTable.getValueAt(fila2, 0).toString();
             a = Utilidades.validaInt(valor1);
             b = Utilidades.validaInt(valor2);
            asociarLibro(a, b);
        }else {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione un libro y una nota");
        }}else if(articleAddNotaRadioBtn.isSelected()){
        
           int fila1 = showLibArtEnNotasTable.getSelectedRow();
        int fila2 = noteAsociarTable.getSelectedRow();
        String valor1, valor2;
         
        if (fila1 >=0 && fila2 >= 0) {
        valor1 = showLibArtEnNotasTable.getValueAt(fila1, 0).toString();
        valor2 = noteAsociarTable.getValueAt(fila2, 0).toString();
        a = Utilidades.validaInt(valor1);
        b = Utilidades.validaInt(valor2);
            asociarArticulo(a, b);
        }else {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione un articulo y una nota");
        } 
            
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void addNoteTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNoteTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addNoteTxtFieldActionPerformed

    /**
     * Metodo para eliminar la nota seleccionada
     * @param evt 
     */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        deleteRowNote();
        showNoteTableAddNote();

    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * Metodo para mostrar las notas en la tabla
     * @param evt 
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
     showNoteTableAddNote();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * Metodo para modificar los datos de una nota
     * @param evt 
     */
    private void modifyNoteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyNoteBtnActionPerformed
     
        int fila = noteAddTable.getSelectedRow();
        saveNoteBtn.setVisible(false);
        jButton3.setVisible(true);
        if ((fila >= 0)) {
           
            addNoteTxtField.setText(noteAddTable.getValueAt(fila, 1).toString());
            addNoteTxtArea.setText(noteAddTable.getValueAt(fila, 2).toString());
       
        }else if ((fila < 0)) {
            JOptionPane.showMessageDialog(null,"Por favor, seleccione primero una nota");
        }
    }//GEN-LAST:event_modifyNoteBtnActionPerformed

    /**
     * Metodo para guardar una nota
     * @param evt 
     */
    private void saveNoteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveNoteBtnActionPerformed
            
            
            if (addNoteTxtField.getText().equals("") | addNoteTxtArea.getText().equals("")) {
                JOptionPane.showMessageDialog(null,"Error, por favor, rellene los campos");
            }else if(addNoteTxtArea.getText().toString().length()>255 | addNoteTxtField.getText().toString().length()> 45){
                JOptionPane.showMessageDialog(null, "Su nota no puede ser mayor de 255 caracteres ni su tema mayor que 45");
            }else{
                addNota(addNoteTxtField.getText(), addNoteTxtArea.getText());
        }
        jButton3.setVisible(false);
    }//GEN-LAST:event_saveNoteBtnActionPerformed
    
    /**
     * Metodo para actualizar los datos de una nota
     * @param evt 
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jButton3.setVisible(false);
         int fila = noteAddTable.getSelectedRow();

         if (addNoteTxtField.getText().equals("") | addNoteTxtArea.getText().equals("")) {
                JOptionPane.showMessageDialog(null,"Error, por favor, rellene los campos");
         }else{
 
                try {
                    PreparedStatement pps = con.prepareStatement("UPDATE Nota SET Tema='"+addNoteTxtField.getText()+"',Descripcion='"+addNoteTxtArea.getText()+"' WHERE idNota='"+noteAddTable.getValueAt(fila, 0).toString()+"'");
                    pps.executeUpdate();
          
                    
                    JOptionPane.showMessageDialog(null,"Nota modificada correctamente");
                } catch (SQLException ex) {
                    Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        showNoteTableAddNote();
    
    }//GEN-LAST:event_jButton3ActionPerformed

    private void allAtributeNotaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allAtributeNotaComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allAtributeNotaComboBoxActionPerformed

    private void searchArticleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchArticleComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchArticleComboBoxActionPerformed

    private void searchComboTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchComboTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchComboTxtFieldActionPerformed

    /**
     * Metodo para buscar las notas de los libros
     * @param evt 
     */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        DefaultTableModel tablaLibro = new DefaultTableModel();
            tablaLibro.addColumn("IdLibro");
            tablaLibro.addColumn("IdNota");
            
            
            showLibArtEnNotasTable.setModel(tablaLibro);
            
            String sql = "SELECT * FROM Libro_tiene_Notas";
            //String sql = "{call buscarTodasNotasDeLibros}";
            
            String datos [] = new String [2];
            
        try {   
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                datos [0] = rs.getString(1);
                datos [1] = rs.getString(2);
                ;
               
                tablaLibro.addRow(datos);
            } 
            showLibArtEnNotasTable.setModel(tablaLibro);
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }  
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * Metodo para buscar las notas de los articulos
     * @param evt 
     */
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
        DefaultTableModel tablaLibro = new DefaultTableModel();
            tablaLibro.addColumn("IdArticulo");
            tablaLibro.addColumn("IdNota");
     
            
            noteAsociarTable.setModel(tablaLibro);
            String sql = "SELECT * FROM Articulo_tiene_Notas";
            //String sql = ("SELECT Articulo_tiene_Notas.idArticulo, Articulo.titulo, Articulo.autor, Articulo_tiene_Notas.idNota, Nota.tema, Nota.descripcion FROM Articulo, Articulo_tiene_Notas, Nota WHERE Articulo_tiene_Notas.idArticulo = Articulo.idArticulo");
            //String sql = ("{call buscarTodasNotasArticulos}");
            
            String datos [] = new String [2];
            
        try {   
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                datos [0] = rs.getString(1);
                datos [1] = rs.getString(2);
          
               
                tablaLibro.addRow(datos);
            } 
            noteAsociarTable.setModel(tablaLibro);
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }  
        
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * Metodo para insertar una nota
     * @param tema String
     * @param descripcion String
     */
     private void addNota (String tema,String descripcion) {
        try {  
            CallableStatement cst = con.prepareCall("{CALL insertarNota(?,?)}");
            cst.setString(1, tema);
            cst.setString(2, descripcion);
            cst.execute();
            cst.close();
            JOptionPane.showMessageDialog(null, "Nota insertada correctamente");
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }      
    }
    
     /**
      * Metodo para listar todas las notas
      */
    public void showNoteTableAddNote() {
            DefaultTableModel tablaNota = new DefaultTableModel();
            tablaNota.addColumn("Id");
            tablaNota.addColumn("Tema");
            tablaNota.addColumn("Descripcion");

            
            noteAddTable.setModel(tablaNota);
            
            String sql = "{call listarTodoNotas}";
            
            String columnasTabla [] = new String [3];
            
        try {   
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                columnasTabla [0] = rs.getString(1);
                columnasTabla [1] = rs.getString(2);
                columnasTabla [2] = rs.getString(3);
        
                tablaNota.addRow(columnasTabla);
            } 
            noteAddTable.setModel(tablaNota);
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    
    /**
     * Metodo para asociar un libro a una nota
     * @param idN int
     * @param idL int
     */
    private void asociarLibro(int idN,int idL) {
        
        String sql = "insert into Libro_tiene_Notas (idNota, idLibro) values ((select idNota from Nota where idNota ='"+idL+"'),(select idLibro from Libro where idLibro = '"+idN +"'))";
               
        try {   
            PreparedStatement pps = con.prepareStatement(sql);
            pps.execute();
            
            JOptionPane.showMessageDialog(null, "Asociados correctamente");
            
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    /**
     * Metodo para asociar una nota a un articulo
     * @param idN
     * @param idL 
     */
    private void asociarArticulo(int idN,int idL) {
        
        String sql = "insert into Articulo_tiene_Notas (idNota, idArticulo) values ((select idNota from Nota where idNota ='"+idL+"'),(select idArticulo from Articulo where idArticulo = '"+idN +"'))";
               
        try {   
            PreparedStatement pps = con.prepareStatement(sql);
            pps.execute();
            
            JOptionPane.showMessageDialog(null, "Asociados correctamente");
            
        } catch (SQLException ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Biblioteca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JRadioButton ArticuloSearchRadioBtn;
    public javax.swing.JTextField AutorArticuloRegistroTxtField;
    public javax.swing.JTextField AutorLibroRegistroTxtField;
    public javax.swing.JTextField EditorialLibroRegistroTxtField;
    public javax.swing.JTextField ISBNLibroRegistroTxtField;
    public javax.swing.JTextField ISSNArticuloRegistroTxtField;
    public javax.swing.JTextField MesArticuloRegistroTxtField;
    public javax.swing.JRadioButton NotaSearchRadioBtn;
    public javax.swing.JTextField PFinArticuloRegistroTxtField;
    public javax.swing.JTextField PInicioArticuloRegistroTxtField;
    private javax.swing.JPanel PanelBusqueda;
    public javax.swing.JTabbedPane PanelGeneral;
    private javax.swing.JPanel PanelModificar;
    private javax.swing.JPanel PanelNotas;
    private javax.swing.JPanel PanelRegistroArticulo;
    public javax.swing.JPanel PanelRegistroArticulo1;
    private javax.swing.JPanel PanelRegistroLibro;
    private javax.swing.JPanel PanelRegistroLibro2;
    public javax.swing.JTextField PgNumLibroRegistroTxtField;
    private javax.swing.JPanel RegistroDeTodo;
    public javax.swing.JTextField RevistaArticuloRegistroTxtField;
    public javax.swing.JButton SaveArticuloRegistroBtn;
    public javax.swing.JButton SaveLibroRegistroBtn;
    public javax.swing.JTextField TituloArticuloRegistroTxtField;
    public javax.swing.JTextField TituloLibroRegistroTxtField;
    public javax.swing.JTextField YearArticuloRegistroTxtField;
    public javax.swing.JTextField YearLibroRegistroTxtField;
    private javax.swing.ButtonGroup addNotaBtnGroup;
    private javax.swing.JTextArea addNoteTxtArea;
    private javax.swing.JTextField addNoteTxtField;
    public javax.swing.JComboBox<String> allAtributeNotaComboBox;
    public javax.swing.JTextField articAnioModifyTxtField;
    public javax.swing.JTextField articAutorModifyTxtField;
    public javax.swing.JButton articDeleteModifyBtn;
    public javax.swing.JTextField articISSNModifyTxtField;
    public javax.swing.JTextField articMesModifyTxtField;
    public javax.swing.JButton articModificarModifyBtn;
    public javax.swing.JTextField articPFinModifyTxtField;
    public javax.swing.JTextField articPiniModifyTxtField;
    public javax.swing.JTextField articRevistaModifyTxtField;
    public javax.swing.JButton articSaveModifyBtn;
    public javax.swing.JTextField articTituloModifyTxtField;
    public javax.swing.JRadioButton articleAddNotaRadioBtn;
    public javax.swing.JRadioButton articleModifyRadioBtn;
    public javax.swing.JRadioButton bookAddNotaRadioBtn;
    public javax.swing.JTextField bookAnioModifyTxtField;
    public javax.swing.JTextField bookAutorModifyTxtField;
    public javax.swing.JButton bookDeleteModifyBtn;
    public javax.swing.JTextField bookEditorialModifyTxtField;
    public javax.swing.JTextField bookISBNModifyTxtField;
    public javax.swing.JButton bookModificarModifyBtn;
    public javax.swing.JRadioButton bookModifyRadioBtn;
    public javax.swing.JTextField bookNpagslModifyTxtField;
    public javax.swing.JButton bookOrArtSearchBtn;
    public javax.swing.JButton bookSaveModifyBtn;
    public javax.swing.JTextField bookTituloModifyTxtField;
    private javax.swing.ButtonGroup chooseTmaNotaBtnGroup;
    public javax.swing.JButton exportarLibrosBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    public javax.swing.JRadioButton libroSearchRadioBtn;
    private javax.swing.ButtonGroup modifyBtnGroup;
    private javax.swing.JButton modifyNoteBtn;
    public javax.swing.JTable modifyTable;
    private javax.swing.JTable noteAddTable;
    private javax.swing.JTable noteAsociarTable;
    private javax.swing.JButton saveNoteBtn;
    public javax.swing.JButton searchAllArticleBtn;
    public javax.swing.JButton searchAllBookBtn;
    public javax.swing.JButton searchAllNotasBtn;
    public javax.swing.JButton searchArticleBtn;
    public javax.swing.JComboBox<String> searchArticleComboBox;
    public javax.swing.JButton searchBookBtn;
    public javax.swing.JComboBox<String> searchBookComboBox;
    private javax.swing.ButtonGroup searchBtnGroup;
    public javax.swing.JTextField searchComboTxtField;
    public javax.swing.JButton searchNotasBtn;
    public javax.swing.JTable searchTable;
    public javax.swing.JTable showLibArtEnNotasTable;
    // End of variables declaration//GEN-END:variables
}
